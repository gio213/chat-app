# chat-app/docker-compose.yml
version: "3.22"

services:
  web:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: dev
    command: npm run dev
    env_file:
      - ./client/.env
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:3000}
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - api
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: appdb
    ports: ["5432:5432"]
    volumes: [db_data:/var/lib/postgresql/data]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d appdb"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    ports: ["6379:6379"]

  api:
    build:
      context: ./server # points to server folder
      dockerfile: Dockerfile
      target: dev
    command: sh -c "npx prisma generate && npm run dev"
    env_file:
      - ./server/.env
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgres://postgres:postgres@db:5432/appdb}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}
      PORT: ${PORT:-4000}
    ports: ["4000:4000"]
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

volumes:
  db_data:
